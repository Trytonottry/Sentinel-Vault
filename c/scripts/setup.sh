#!/bin/bash
# setup.sh ‚Äî One-Click Dependency Installer for Sentinel Vault
# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –û–°: Ubuntu/Debian, Fedora/RHEL, Arch

set -e

echo "üõ°Ô∏è  –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è Sentinel Vault..."
echo "OS: $(uname -s)"
echo "User: $(whoami)"

detect_distro() {
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        DISTRO=$NAME
    else
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤."
        exit 1
    fi
}

install_dependencies() {
    case "$DISTRO" in
        "Ubuntu"*|"Debian"*)
            sudo apt update
            sudo apt install -y \
                build-essential \
                libssl-dev \
                libglfw3-dev \
                libgles2-mesa-dev \
                pkg-config \
                cmake \
                git \
                wget \
                zip \
                unzip \
                curl \
                libgl1-mesa-dev \
                libxcursor-dev \
                libxinerama-dev \
                libxi-dev \
                libxrandr-dev \
                libxss-dev \
                libxtst-dev \
                libxcomposite-dev \
                libasound2-dev \
                libpulse-dev \
                libcunit1-dev \
                bubblewrap \
                appimagetool \
                tpm2-tools \
                tpm2-tss \
                mingw-w64 \
                nsis
            ;;

        "Fedora"*|"Red Hat"*|"CentOS"*)
            sudo dnf groupinstall -y "Development Tools"
            sudo dnf install -y \
                openssl-devel \
                glfw-devel \
                mesa-libGLES-devel \
                pkgconf-pkg-config \
                cmake \
                git \
                wget \
                zip \
                unzip \
                libXcursor-devel \
                libXinerama-devel \
                libXi-devel \
                libXrandr-devel \
                alsa-lib-devel \
                pulseaudio-libs-devel \
                CUnit-devel \
                bubblewrap \
                appimagekit \
                tpm2-tools \
                tpm2-tss \
                mingw64-gcc \
                mingw32-gcc \
                nsis
            ;;

        "Arch Linux"|"Manjaro Linux")
            sudo pacman -Sy --noconfirm \
                base-devel \
                openssl \
                glfw-x11 \
                gcc \
                pkgconf \
                cmake \
                git \
                wget \
                zip \
                unzip \
                xorgproto \
                libxcursor \
                libxinerama \
                libxi \
                libxrandr \
                alsa-lib \
                pulseaudio \
                cunit \
                bubblewrap \
                appimagetool \
                tpm2-tools \
                tpm2-tss \
                mingw-w64-gcc \
                nsis
            ;;

        *)
            echo "‚ùå –î–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤ $DISTRO –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏."
            echo "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é."
            exit 1
            ;;
    esac
}

finalize() {
    echo ""
    echo "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
    echo ""
    echo "üöÄ –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç:"
    echo ""
    echo "   make full"
    echo "   ./SentinelVault-x86_64.AppImage"
    echo ""
    echo "üí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Ä–µ–¥–µ:"
    echo "   ./run_sandbox.sh"
    echo ""
    echo "üîê TPM –¥–æ—Å—Ç—É–ø–µ–Ω, –µ—Å–ª–∏ —É –≤–∞—Å –≤–∫–ª—é—á—ë–Ω —á–∏–ø (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ: tpm2_pcrlist)"
}

# === –ó–∞–ø—É—Å–∫ ===
detect_distro
echo "üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤: $DISTRO"
install_dependencies
finalize